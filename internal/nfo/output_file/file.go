package output_file

import (
	"fmt"
	"github.com/mattkimber/stationer/internal/bytes"
)

type File struct {
	elements []Element
}

func (f *File) AddElement(element Element) {
	if f.elements == nil {
		f.elements = make([]Element, 0)
	}

	f.elements = append(f.elements, element)
}

func (f *File) Output() {
	lines := make([]string, 0)

	for _, el := range f.elements {
		// Allow things like file headers to not return comments
		if el.GetComment() != "" {
			lines = append(lines, fmt.Sprintf("// %s", el.GetComment()))
		}
		lines = append(lines, el.GetLines()...)
	}

	// Write the header
	fmt.Print("// Automatically generated by Stationer.\n// (Info version 32)\n// Format: spritenum imagefile depth xpos ypos xsize ysize xrel yrel zoom flags\n")

	// Slightly hacky way of dealing with the fact some lines are comments
	total := 0
	for _, l := range lines {
		if l[0:2] != "//" {
			total++
		}
	}

	fmt.Printf("0 * 4 %s\n", bytes.GetDouble(total))

	idx := 0
	for _, l := range lines {
		if l[0:2] == "//" {
			fmt.Printf("\n%s\n", l)
		} else {
			fmt.Printf("%d %s\n", idx+1, l)
			idx++
		}
	}
}
